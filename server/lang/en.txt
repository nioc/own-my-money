en {
    methodNotImplemented { "{0} method is not supported for this resource" }
    authorizationNotFound { "Authorization header not found" }
    tokenSchemeBearer { "Token scheme must be bearer" }
    invalidToken { "Token is not valid" }
    subjectNotFound { "Subject not found" }
    userNotFound { "User not found" }
    adminScopeRequired { "Admin scope required" }
    loginMustBeProvided { "Login must be provided" }
    passwordMustBeProvided { "Password must be provided" }
    emailMustBeProvided { "Email address must be provided" }
    accountIdMustBeProvided { "Account identifier must be provided" }
    transactionIdMustBeProvided { "Transaction identifier must be provided" }
    keyMustBeProvidedInPath { "Key attribute must be provided in path" }
    valueMustBeProvided { "Value attribute must be provided" }
    userIdMustBeProvidedInPath { "User identifier must be provided in path" }
    userIdMustBeProvided { "User identifier must be provided" }
    loginAndPasswordMustBeProvided { "Both login and password must be provided" }
    typeMustBeProvidedInQuery { "Type attribute must be provided in query string" }
    typeMustBeInEnum { "Type attribute must be `debit` or `credit`" }
    userCreationError { "Error during user creation" }
    invalidCredentials { "Invalid credentials" }
    userNotHolder { "User is not an account holder" }
    ownerIsHolder { "Account owner can not be removed from holders" }
    putMethodMustBeCalledOnASpecificResource { "PUT method must be called on a specific resource" }
    deleteMethodMustBeCalledOnASpecificResource { "DELETE method must be called on a specific resource" }
    userCanBeUpdatedByHimselfOnly { "User can be updated by himself only" }
    transactionQueryError { "Error during transaction query" }
    profileUpdateError { "Error during profile update" }
    passwordUpdateError { "Error during password update" }
    requestError { "Error during request" }
    accountNotFound { "Account not found" }
    transactionNotFound { "Transaction not found" }
    somethingWentWrong { "Something went wrong" }
    transactionsCanBeQueriedByAccountOwnerOnly {" Transactions can be queried by account owner only" }
    transactionsCanBeUpdatedByAccountOwnerOnly {" Transactions can be updated by account owner only" }
    accountCanBeUpdatedByOwnerOnly { "Account can be updated by owner only" }
    accountCanBeDeletedByOwnerOnly{ "Account can be deleted by owner only" }
    accountAlreadyExists { "This account already exists" }
    categoryNotFound { "Category not found" }
    stepNotFound { "Step not found" }
    creationError { "Error during creation: " }
    categoryIsNotValid { "Category is not valid: " }
    updateError { "Error during update: " }
    fileExtensionMustBeIn { "File extension must be in following list: " }
    fileUploadError { "Error during file upload" }
    ofxProcessError { "Error during OFX process" }
    jsonProcessError { "Error during JSON process" }
    qifProcessError { "Error during QIF process" }
    mapCodeMustBeProvided { "Map code must be provided in query string for JSON dataset" }
    fileExtensionNotImplemented { "File extension « {0} » is not implemented" }
    accountsTransactionsProcessed { "{0, plural, =0{0 account} =1{1 account} other{# accounts}} created ({1} from file), {2, plural, =0{0 transaction} =1{1 transaction} other{# transactions}} created ({3} from file)" }
    transactionsProcessed { "{0, plural, =0{0 transaction} =1{1 transaction} other{# transactions}} created ({1} from file)" }
    mapNotFound { "Map not found" }
    patternNotFound { "Pattern not found" }
    mapIsNotValid { "Map is not valid: " }
    patternIsNotValid { "Pattern is not valid: " }
    transactionIsNotValid { "Transaction is not valid: " }
    inconsistentAccountId { "inconsistent account identifier" }
    mapCreationError { "Error during map creation" }
    mapAttributesCreationError { "Error during attributes creation" }
    patternCreationError { "Error during pattern creation" }
    codeCanNotBeChanged { "Code can not be changed" }
    transactionUpdateError { "Error during transaction update" }
    mapUpdateError { "Error during map update" }
    mapAttributesUpdateError { "Error during attributes update" }
    patternUpdateError { "Error during pattern update" }
    invalidDuration { "Invalid duration" }
    unknownInstalledVersion { "Unknown installed version" }
    stepSetupDataAccess { "Setup database access" }
    stepCreateDatabase { "Create database" }
    stepSetupmailer { "Setup mailer" }
    stepSetupSecurity { "Setup security" }
    stepCreateUser{ "Create user" }
    stepFinalizeSetup { "Finalize setup" }
    stepConfirmation { "Confirmation" }
    unknownStep { "Unknown step" }
    stepSetupDataAccessLabel { "Application will create MySQL user and database used to store your data" }
    stepCreateDatabaseLabel { "Now, application will create MySQL tables" }
    stepSetupmailerLabel { "The application can send emails if your host has a SMTP server, in this step we configure the mail system" }
    stepSetupSecurityLabel { "Authorization process uses signed JWT, it requires you set your own secret key for generating the HMAC" }
    stepCreateUserLabel { "This step will create your (super) user account" }
    stepFinalizeSetupLabel { "This step will complete your setup" }
    stepConfirmationLabel { "That's all, installation process has been completed, you can now <a href=\"/\">signin</a> into the application" }
    fieldHost { "Host" }
    fieldLogin { "Login" }
    fieldPassword { "Password" }
    fieldDatabase { "Database" }
    fieldSendMail { "Send mail" }
    fieldFromAddress { "From address" }
    fieldHashKey { "Hash key" }
    fieldHostLabel { "MySQL server host, can be `localhost`, an ip address, ..." }
    fieldLoginMySqlRootLabel { "Existing MySQL admin login used for create the `money` user (require the `CREATE USER` privilege)" }
    fieldPasswordMySqlRootLabel { "Existing MySQL admin password (used only for this step, it will not be stored)" }
    fieldLoginMySqlLabel { "MySQL `money` user login to create" }
    fieldPasswordMySqlLabel { "MySQL `money` user password" }
    fieldDatabaseLabel { "MySQL database name to create" }
    fieldSendMailLabel { "Does the application send out emails (for user connection) ; type 1 for sending emails, 0 for not" }
    fieldFromAddressLabel { "Sender email address" }
    fieldHashKeyLabel { "Hash used to sign user tokens" }
    fieldLoginLabel { "Your login in the application (alphanumeric only, more than 3 characters)" }
    fieldPasswordLabel { "Your password in the application (alphanumeric only, more than 5 characters)" }
    stepCreateBackup { "Create backup" }
    stepUpdateDatabase { "Update database" }
    stepFinalizeUpdate { "Finalize update" }
    stepCreateBackupLabel { "Your data matters, application will create a local backup of your database" }
    stepUpdateDatabaseLabel { "Now, application will update MySQL tables" }
    stepFinalizeUpdateLabel { "This step will complete this update" }
    stepUpdateConfirmationLabel { "That's all, update process has been completed, you can now go back to the <a href=\"/\">home</a> and discover the new features" }
    getFieldFailed { "Failed to get `{0}` value" }
    getConfigurationFailed { "Failed to get `{0}` configuration" }
    setConfigurationFailed { "Failed to set `{0}` configuration" }
    backupError { "Error during backup creation: " }
    databaseUpdateErrorBadVersion { "Error during database update (current {0} ≠ target {1})" }
    databaseUpdateErrorRead { "Error during database update (can not read model version)" }
    getLastVersion { "Get last version..." }
    failed { "failed" }
    done { "done" }
    noReleaseFound { "No release was found" }
    releaseIs { "Release is {0}" }
    noDownloadUrl { "No download url was found" }
    folderNotWritable { "Folder {0} is not writable, you should run: chown {1}:{1} {0} -R" }
    downloadArchive { "Download archive..." }
    archiveNotWritable { "Unable to write archive at {0}/{1}" }
    noUpdateContainer { "Application is running in container, update docker image" }
    extractArchive { "Extract archive to {0}..." }
    applicationUpdated { "Application is updated, you may have to configure at: {0}/#/setup" }
    downloadError { "download error: " }
    donwloadSpeed { "{0} bytes on {1} seconds"}
    mailConnectionTitle { "[Money] New connection in your account" }
    mailConnectionBody { "Hi,\r\n\r\nSomeone was recently authorized to access your account.\r\nIP address: {0}.\r\nUser agent: {1}.\r\n\r\nYou can check this access from your profile.\r\n\r\nRegards." }
}
